@@-- --------------------------------
@@--  Update Thumb Preview when selecting photo with <select> attribute

    function updateThisThumbPreview () {
        var thumb = this.options[this.selectedIndex].style.backgroundImage;
        this.style.backgroundImage = thumb;
        /* If a photo is selected, show photo metadata creation link */
        if (this.selectedIndex != 0) {
            Element.show($('new_post_add_metadata'));
        } else {
            Element.hide($('new_post_add_metadata'));
        }
    }

@@-- --------------------------------
@@--  Update Thumb Preview when inserting new photo

    function updateThumbPreview(element_id) {
        var element = $(element_id);
        var thumb = element.options[element.selectedIndex].style.backgroundImage;
        element.style.backgroundImage = thumb;
        if (element.selectedIndex != 0) {
            Element.show($('new_post_add_metadata'));
        } else {
            Element.hide($('new_post_add_metadata'));
        }
    }

@@-- --------------------------------
@@--  Change background image of an element

    function changeBackgroundImage(element, background) {
        element.style.backgroundImage = background;
    }

@@-- --------------------------------
@@--  Show element given in rel attribute

    function show_rel() {
        var element = this.rel;
        Element.show(element);
    }

@@-- --------------------------------
@@--  Hide element given in rel attribute

    function hide_rel() {
        var element = this.rel;
        Element.hide(element);
    }

@@-- --------------------------------
@@--  Gmaps

     var map        = null;
     var geocoder   = null;
     var v2p_marker = null;
     var v2p_point  = null;

     function gmap_load() {
         if (GBrowserIsCompatible()) {
             map = new GMap2(document.getElementById("map"));
             map.addControl(new GLargeMapControl());
             map.addControl(new GScaleControl(),
             new GControlPosition(G_ANCHOR_BOTTOM_LEFT, new GSize(50, 50)));
             map.addControl(new GOverviewMapControl());
             map.addControl(new GMapTypeControl(),
             new GControlPosition(G_ANCHOR_BOTTOM_LEFT, new GSize(5, 5)));
             @@--  map.enableDoubleClickZoom();

	     v2p_point = new GLatLng(48.864236, 2.39791),
             map.setCenter(v2p_point, 13);
	     v2p_marker = new GMarker(v2p_point,
				      {draggable: true,
				       title: "Drag me please"});
	     @@--  Adds listener

	     @@--  Close info window when starting to drag the marker

	     GEvent.addListener(v2p_marker, "dragstart", function() {
		     map.closeInfoWindow();
		 });

	     @@--  Update (or create) latitude and longitude input data
             @@--  on drag end or on double click

	     GEvent.addListener(v2p_marker, "dragend", function() {
		     var point = v2p_marker.getPoint();
		     map.setCenter(point);
		     updateV2PCoordinate(point);
		 });

	     GEvent.addListener(map, "dblclick", function(marker,point) {
		     map.setCenter(point);
		     v2p_marker.setPoint(point);
		     updateV2PCoordinate(point);
		 });


	     map.addOverlay(v2p_marker);
	     map.addControl(new GLargeMapControl());

             geocoder = new GClientGeocoder();
         }
     }

     function updateV2PCoordinate(point) {
	 $('latitude').value  = point.lat();
	 $('longitude').value = point.lng();
     }

     function centerMarker() {
	 var point = map.getCenter();
	 v2p_marker.setPoint(point);
	 updateV2PCoordinate(point);
     }


     function showAddress(address) {
         if (geocoder) {
             geocoder.getLatLng(
             address,
             function(point) {
                 if (!point) {
                     $('gmap_error').innerHTML = address + " not found";
                 } else {
                     map.setCenter(point, 13);
                     $('latitude').value  = point.lat();
                     $('longitude').value = point.lng();
		     v2p_marker.setPoint(point);

//                      var marker = new GMarker(point,
//                                               {draggable: true,
//                                                title: "Drag me please"});
                     v2p_marker.openInfoWindowHtml(address);
                 }
             }
             );
         }
     }


