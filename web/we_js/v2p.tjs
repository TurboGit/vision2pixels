var V2P = {
      'version': 0.1,
      'Map' : {},
      'ThumbPreview' : {},
      'Tools': {}
}

V2P.Tools = function() {
   return {
	    /* Change background image of an element */

      changeBackgroundImage: function(element, image) {
	 element.style.backgroundImage = image;
      },

   /* Show element given in rel attribute */

      show_rel: function() {
	 Element.show(this.rel);
      },

   /* Hide element given in rel attribute */

      hide_rel: function() {
	 Element.hide(this.rel);
      }
   }
}();

V2P.ThumbPreview = function() {
   return {
      update: function() {
	 var thumb = this.options[this.selectedIndex].style.backgroundImage;
	 V2P.Tools.changeBackgroundImage(this, thumb);
	 if (this.selectedIndex != 0) {
	    Element.show($('new_post_add_metadata'));
	 } else {
	    Element.hide($('new_post_add_metadata'));
	 }
      },

   /* Update Thumb Preview when inserting new photo */

      insert_hook: function(element_id) {
	 var element = $(element_id);
	 var thumb = element.options[element.selectedIndex].style.backgroundImage;
	 V2P.Tools.changeBackgroundImage(element, thumb);
	 if (element.selectedIndex != 0) {
	    Element.show($('new_post_add_metadata'));
	 } else {
	    Element.hide($('new_post_add_metadata'));
	 }
      }
   }
}();

V2P.Map =  function () {
    // Private part

   return {
      GeoMap : function (id, zoom, lat, lng, setPointHook) {
	 this.setPointHook = setPointHook;
	 this.map = new GMap2(document.getElementById(id));
	 this.zoom = zoom;
	 this.setPoint(new GLatLng(lat, lng));
	 this.geocoder = new GClientGeocoder();
	 this.marker = new GMarker(this.point,
				   {draggable:true, title:"Drag Me"});
	 this.map.addOverlay(this.marker);
      },

      writeGeoloc : function (point) {
	    $('latitude').value  = point.lat();
	    $('longitude').value = point.lng();
      },

      geolocate : function () {
	 var inst = null;
	 if (GBrowserIsCompatible()) {
	    inst = new V2P.Map.GeoMap("map", 13, 48.864236, 2.39791, V2P.Map.writeGeoloc);
	    inst.addControls();
	    inst.addEvents();
	 }
      },
   }
}();

V2P.Map.GeoMap.prototype.setPoint = function(pt) {
   this.point = pt;
   this.map.setCenter(pt, this.zoom);
   this.setPointHook(pt);
}

V2P.Map.GeoMap.prototype.centerMap = function() {
   this.setPoint(this.map.getCenter());
   this.marker.setPoint(this.point);
}

V2P.Map.GeoMap.prototype.addControls = function() {
      this.map.addControl(new GLargeMapControl());
      this.map.addControl(new GScaleControl(),
			  new GControlPosition(G_ANCHOR_BOTTOM_LEFT,
					       new GSize(50, 50)));
      this.map.addControl(new GOverviewMapControl());
      this.map.addControl(new GMapTypeControl(),
			  new GControlPosition(G_ANCHOR_BOTTOM_LEFT,
					       new GSize(5, 5)));
}

V2P.Map.GeoMap.prototype.onMarkerDragStart = function() {
   this.map.closeInfoWindow();
}

V2P.Map.GeoMap.prototype.onMarkerDragEnd = function() {
      this.setPoint(this.marker.getPoint());
}

V2P.Map.GeoMap.prototype.onMapDblClick = function(marker, point) {
   this.setPoint(point);
   this.marker.setPoint(point);
}

V2P.Map.GeoMap.prototype.geolocateResult = function() {
   var address = $('address').value;
   if (this.geocoder) {
      this.geocoder.getLatLng(address,
			      function(point) {
				 if (!point) {
				       $('gmap_error').innerHTML = address + ' not found';
				 } else {
				     V2P.Map.writeGeoloc(point);
				 }
			      });

   }
}

V2P.Map.GeoMap.prototype.addEvents = function() {
   GEvent.bindDom(document.getElementById("centermarker"), "click", this, this.centerMap);
   GEvent.bindDom(document.getElementById("metadata_edition_form_go"), "click", this, this.geolocateResult);
   GEvent.bind(this.marker, "dragstart", this, this.onMarkerDragStart);
   GEvent.bind(this.marker, "dragend", this, this.onMarkerDragEnd);
   GEvent.bind(this.map, "dblclick", this, this.onMapDblClick);
}
