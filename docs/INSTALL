
Some notes for building Vision2Pixels from sources.

Vision2Pixels needs some support libraries:

   * AWS (required)

   * Gwiad (required)

     http://repo.or.cz/w/gwiad.git

     Morzhol submodule must also be installed.

   * Diouzhtu (to support comments with markdown syntax)

   * ImageMagick (required)

     Tested with ImageMagick 6.2.4.

   * GnadeLite (required - a Git submodule)

     http://repo.or.cz/w/gnadelite.git

     Minimal version of GNADE database binding for Vision2Pixels.
     It also contains a high level binding to abstract the database
     used, this will permit to swicth to PostgreSQL if needed.

   * JPEG (required for ImageMagick JPEG support)

     Tested with JPEG v6b

   * SQLite3 (required)

     SQLite3 database is at the moment the primary database.

Building
--------

   Ada modules Gwiad, Morzhol and GnadeLite must be installed into the
   standard location. See install documentation for each of them.

   Building Vision2Pixels:

   $ cd v2p
   $ make

Installing with Gwiad
---------------------

   $ make install_gwiad_plugin

Setting the testing environment
-------------------------------

The first time you run Vision2Pixels you'll need a database and a set of
images/thumbs that goes with it.

To create the database:

   $ cd db/data
   $ ./create_database.sh

This will create the demo database named "testing.db".

To install the demo images grab the v2p-data.tar.bz2 from the Download area
on http://code.google.com/p/vision2pixels.

   $ cd db/data
   $ tar xfj v2p-data.tar.bz2

Running with Gwiad
------------------

Check that your gwiad installation has upload_directory configured or
edit ~/opt/gwiad/aws.ini to set upload_directory. For example :

   reuse_address true
   upload_directory /tmp/upload

Note that you should not set reuse_address in production mode for
security reason. Use it only in your testing environment.

   $ cd ~/opt/gwiad
   $ bin/argwiad

Then point the browser to :  http://127.0.0.10:8080/

Note that it is possible to change the defaults Vision2Pixels setting
by editing ~/opt/gwiad/plugins/vision2pixels/v2p.ini.

The PATH in v2p.ini are relatives to the .ini directory. For example, here
is the v2p.ini to use with the testing environment:

   db_name db/testing.db
   images_path db/images/
   thumbs_path db/thumbs/
   google_map_key ABQIAAAAbXnh4fBA_Kpf2wc2hparDhR4WN9nhhC3FDZFKFfdWmUUvCh7cRSW8b0ArdMGZxnSR74CYHIbQ1SXxA

The google map key is valid only for the testing environment pointing
to 127.0.0.10 port 8080.

Means that the database can be found in
~/opt/gwiad/plugins/vision2pixels/db/testing.db.

Building libraries
------------------

   It is trivial to do so on GNU/Linux and other UNIXes.

   On Windows it is possible to download tested libraries here:

   http://code.google.com/p/vision2pixels/downloads/list

   It is also possible to build those libraries from source. This is not
   tested anymore. So the information below could need some tweaking.

   -----------------------------------------------------------------------
                NOT SUPPORTED ANYMORE - KEPT JUST IN CASE
   -----------------------------------------------------------------------

   The notes below are for building ImageMagick on Windows using GNAT GPL
   2007. Note that it is supposed that you have Cygwin toolset
   installed. It may work with MSYS but this has not been tested.

   Note also that we build only the static libraries. Shared libraries are
   not supported for now.

   V2P requires at least the JPEG support.

   - building jpegsrc.v6b.tar.gz :

   $ tar xfz jpegsrc.v6b.tar.gz
   $ cd jpeg-6b
   $ prefix=/opt/jpeg
   $ ./configure --prefix=$prefix --build=i686-pc-mingw32
   $ make
   $ mkdir -p $prefix/bin
   $ mkdir -p $prefix/man/man1
   $ mkdir -p $prefix/include
   $ mkdir -p $prefix/lib
   $ make install
   $ make install-lib
   $ make install-headers

   - building ImageMagick-6.2.4-6.tar.gz

   $ tar xfz ImageMagick-6.2.4-6.tar.gz
   $ cd ImageMagick-6.2.4
   $ prefix=/opt/GNAT/GPL_2007

   $ export PATH=$prefix/bin:$prefix/lib:$PATH
   $ export C_INCLUDE_PATH=$prefix/pentium-mingw32msv/include\;/opt/jpeg/include
   $ export LDFLAGS=-L/opt/jpeg/lib

   $ ./configure --build=i686-pc-mingw32 --prefix=/opt/magick \
        --disable-shared \
	--without-magick-plus-plus \
	--without-fontconfig \
	--without-xml \
	--without-perl \
	--without-threads \
	--enable-delegate-build

   $ make
   $ make install
